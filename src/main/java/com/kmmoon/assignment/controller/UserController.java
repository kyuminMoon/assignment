package com.kmmoon.assignment.controller;import com.kmmoon.assignment.dto.CursorResultDTO;import com.kmmoon.assignment.dto.ListResultDTO;import com.kmmoon.assignment.dto.PostResponseDTO;import com.kmmoon.assignment.entity.User;import com.kmmoon.assignment.service.PostService;import com.kmmoon.assignment.service.UserService;import io.swagger.v3.oas.annotations.Operation;import io.swagger.v3.oas.annotations.tags.Tag;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Value;import org.springframework.data.domain.PageRequest;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@Slf4j@Tag(name = "유저 관련 API")@RequiredArgsConstructor@RestController@RequestMapping("/user")public class UserController {    @Value("${spring.data.web.pageable.default-page-size}")    private int defaultSize;    private final UserService userService;    private final PostService postService;    /**     * query string으로 커서 기반 페이징, 유저 리스트 조회     */    @Operation(summary = "유저 리스트 조회")    @GetMapping("/list")    public CursorResultDTO<User> findByUsersByPage(            Long cursorId,            Integer size    ) {        size = (size == null) ? defaultSize : size;        return userService.findUsersByPage(cursorId, PageRequest.of(0, size));    }    /**     * path parameters userId 유저의 좋아요 글 전체 조회 (페이징 X)     */    @Operation(summary = "유저의 좋아요 글 전체 조회")    @GetMapping("/{userId}/like")    public ListResultDTO<PostResponseDTO> findByUsersByPage(            @PathVariable Long userId    ) {        return postService.findPostByIsLike(userId);    }}