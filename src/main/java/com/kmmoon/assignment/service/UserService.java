package com.kmmoon.assignment.service;import com.kmmoon.assignment.dto.CursorResultDTO;import com.kmmoon.assignment.entity.User;import com.kmmoon.assignment.repository.UserRepository;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.data.domain.Pageable;import org.springframework.stereotype.Service;import java.util.List;@Slf4j@RequiredArgsConstructor@Servicepublic class UserService {    private final UserRepository userRepository;    public CursorResultDTO<User> findUsersByPage(Long cursorId, Pageable page) {        List<User> users = getUsers(cursorId, page);        Long lastIdOfList = users.isEmpty() ?                null : users.get(users.size() - 1).getId();        return new CursorResultDTO<>(users, hasNext(lastIdOfList));    }    private List<User> getUsers(Long cursorId, Pageable pageable){        return cursorId == null ?                userRepository.findAllByOrderByIdDesc(pageable) :                userRepository.findByIdLessThanOrderByIdDesc(cursorId, pageable);    }    private Boolean hasNext(Long cursorId) {        if (cursorId == null) return false;        return userRepository.existsByIdLessThan(cursorId);    }}